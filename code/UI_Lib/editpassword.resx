<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="viewpassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XjbQGv0Hu1OW3RnjcloAAAAASUVORK5CYII=
</value>
  </data>
</root>